#include<iostream>

using namespace std;

//15의 배수? 3*5
//3의 특징 각 자리수의 합이 3으로 나누어 떨어짐
//5의 특징 일의 자리가 0 or 5
//즉 15는 각 자리수의 합이 3이며 일의 자리는 5일 것//1이나 5만 오기 때문

//각 자리의 합을 나눈 나머지가 0,1,2 인 것이 각각 몇개 있는지 기록
//사실상 0인 것이 유효하므로 마지막은 [N][0]출력

// 1의 자리는 5 고정
// 십의 자리가 1,5 가 오는 경우 각각
// 15 -> dp[2][0]=1;//각 자리수 합 %3=0
// 55 -> dp[2][1]=1//각 자리수 합 %3 =1
// dp[2][2]=0;

// 세번째 수
// dp[2][0]은? dp[3][(0+1)%3], dp[3][(0+5)%3]에 추가->dp[3][1],dp[3][2];
// dp[2][1]은? dp[3][(1+1)%3], dp[3][(1+5)%3]에 추가->dp[3][2],dp[3][0]
// dp[2][2]는? dp[3][(2+1)%3], dp[3][(2+5)%3]에 추가->dp[3][0],dp[3][1];
// 즉 역으로 각각 경우의 수를 더해주면 됨

// dp[i][0]=dp[i-1][1]+dp[i-1][2];
// 이런 식으로 구하자

//1추가된 경우 
long dp[1516][3]={0,};
const long MAX = 1000000007;
int N;
main(){
    cin >> N;

    //초기화
    dp[2][0] = 1;
    dp[2][1] = 1;
    for (int i = 3; i <=N; i++)
    {
        dp[i][0] = (dp[i - 1][1] + dp[i - 1][2])%MAX;
        dp[i][1] = (dp[i - 1][0] + dp[i - 1][2])%MAX;
        dp[i][2] = (dp[i - 1][0] + dp[i - 1][1])%MAX;
    }
    cout << dp[N][0];
}